name: Azure Runbooks

on: [push]
# on: [workflow_dispatch]

env:
  RUNBOOK_PACKAGE_PATH: "."
  PYTHON_ARCHITECTURE: "x64"
  PYTHON_VERSION: "3.10"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.PYTHON_ARCHITECTURE }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt --upgrade --no-cache-dir

      - name: Lint with flake8
        run: |
          flake8 app.py --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Run Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Deploy Azure Runbooks
        uses: azure/powershell@v2
        with:
          inlineScript: |
            pushd "./${{ env.RUNBOOK_PACKAGE_PATH }}"
            Import-AzAutomationRunbook -Path "app.py" -Name ${{ secrets.AZURE_RUNBOOK_NAME }} -Type Python3 -AutomationAccountName ${{ secrets.AZURE_AUTOMATION_ACCOUNT_NAME }} -ResourceGroupName ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} -Force
            Publish-AzAutomationRunbook -Name ${{ secrets.AZURE_RUNBOOK_NAME }} -AutomationAccountName ${{ secrets.AZURE_AUTOMATION_ACCOUNT_NAME }}  -ResourceGroupName ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
            popd
          azPSVersion: "latest"

      - name: logout
        run: |
          az logout
